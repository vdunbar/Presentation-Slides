set.seed(1)
rivers_dot +
geom_jitter(aes(colour = Count), width = 0.5, size = 7) +
scale_color_brewer(palette = "Dark2")
set.seed(1)
rivers_dot +
geom_jitter(aes(colour = factor(Count)), width = 0.5, size = 7) +
scale_color_brewer(palette = "Dark2")
set.seed(1)
rivers_dot +
geom_jitter(width = 0.5, size = 7, colour = one.palette)
set.seed(1)
rivers_dot +
geom_jitter(aes(colour = factor(Count)), width = 0.5, size = 7) +
scale_color_brewer(palette = "Dark2") +
theme(
legend.position = 'none'
)
rivers_sorted <- sort(rivers, decreasing = F)
ggplot() +
geom_histogram(aes(rivers_sorted), bins = 36, fill = one.palette) +
coord_flip() +
scale_x_reverse() +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
xlab("") +
ylab("")
rivers_sorted <- sort(rivers, decreasing = F)
rivers_sorted_base <- ggplot() +
geom_histogram(aes(rivers_sorted), bins = 36, fill = one.palette) +
theme_minimal() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
xlab("") +
ylab("")
rivers_sorted_base +
coord_flip() +
scale_x_reverse()
rivers_sorted_base
rivers_sorted <- sort(rivers, decreasing = F)
rivers_sorted_base <- ggplot() +
geom_histogram(aes(rivers_sorted), bins = 36, fill = one.palette) +
theme_minimal() +
theme(
text = element_text(size = 40)
) +
xlab("") +
ylab("")
rivers_sorted_base +
coord_flip() +
scale_x_reverse() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
)
rivers_sorted_base
display.brewer.all(colorblindFriendly = T)
library(scales)
data <- read.csv("data/lifeExpectencyVSgpd.csv", header = TRUE, na.strings = c("", " ", "NULL"))
colnames(data) <- c("Country", "Code", "Year", "Population", "Continent", "Life.Expectency", "GDP")
data2015 <- subset(data, Year == 2015 & GDP != "NA" & Life.Expectency != "NA" & Code != "NA" & Continent != "NA")
gdp.le.base <- ggplot (data2015) +
labs(x = "GDP", y = "Life Expectency", colour = "Continent") +
theme_minimal() +
theme(
text = element_text(size = 40)
) +
scale_color_brewer(palette = "Dark2")
no.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$"))
no.colour
gdp.le.base
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
gdp.le.base
with.colour
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_color_brewer(palette = "Dark2") +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
library(scales)
data <- read.csv("data/lifeExpectencyVSgpd.csv", header = TRUE, na.strings = c("", " ", "NULL"))
colnames(data) <- c("Country", "Code", "Year", "Population", "Continent", "Life.Expectency", "GDP")
data2015 <- subset(data, Year == 2015 & GDP != "NA" & Life.Expectency != "NA" & Code != "NA" & Continent != "NA")
gdp.le.base <- ggplot (data2015) +
labs(x = "GDP", y = "Life Expectency", colour = "Continent") +
theme_minimal() +
theme(
text = element_text(size = 40)
)
no.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$"))
no.colour
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_color_brewer(palette = "Dark2") +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_color_brewer(palette = "Paired") +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
display.brewer.all(colorblindFriendly = T)
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_color_brewer(palette = "Set2") +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_color_brewer(palette = "Set2") +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_color_brewer(palette = "Dark2") +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
library(scales)
data <- read.csv("data/lifeExpectencyVSgpd.csv", header = TRUE, na.strings = c("", " ", "NULL"))
colnames(data) <- c("Country", "Code", "Year", "Population", "Continent", "Life.Expectency", "GDP")
data2015 <- subset(data, Year == 2015 & GDP != "NA" & Life.Expectency != "NA" & Code != "NA" & Continent != "NA")
gdp.le.base <- ggplot (data2015) +
labs(x = "GDP", y = "Life Expectency", colour = "Continent") +
theme_minimal() +
theme(
text = element_text(size = 40)
) +
scale_color_brewer(palette = "Dark2")
no.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$"))
no.colour
with.colour <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent)), size = 5) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
guides(colour = guide_legend(override.aes = list(size=10)))
with.colour
colour.size <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent), size = Population)) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_size(range = c(2,15), guide = "none") +
guides(colour = guide_legend(override.aes = list(size=10)))
colour.size
colour.size <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent), size = Population), alpha = 0.7) +
xlim(0, 150000) +
scale_x_continuous(labels = dollar_format(prefix = "$")) +
scale_size(range = c(2,15), guide = "none") +
guides(colour = guide_legend(override.aes = list(size=10)))
colour.size
colour.size.log <- gdp.le.base +
geom_point(aes(GDP, Life.Expectency, colour = factor(Continent), size = Population), alpha = 0.7) +
scale_x_log10(labels = dollar_format(prefix = "$")) +
scale_size(range = c(2,15), guide = "none") +
guides(colour = guide_legend(override.aes = list(size=10)))
colour.size +
theme(
legend.position = "none"
)
colour.size.log +
labs(y = "")
gdp.le.lm <- ggplot (data2015, aes(GDP, Life.Expectency)) +
geom_point(aes(colour = factor(Continent), size = Population), alpha = 0.7) +
scale_x_log10(labels = dollar_format(prefix = "$")) +
scale_size(range = c(2,15), guide = "none") +
guides(colour = guide_legend(override.aes = list(size=10))) +
geom_smooth(method = "lm", se = F) +
labs(x = "GDP", y = "Life Expectency", colour = "Continent") +
theme_minimal() +
theme(
text = element_text(size = 40)
) +
scale_color_manual(values = six.palette)
gdp.le.lm
gdp.le.lm +
facet_wrap( ~ Continent)
gdp.le.lm +
facet_wrap( ~ Continent) +
scale_size(range = c(2,10), guide = "none")
gdp.le.lm +
facet_wrap( ~ Continent) +
scale_size(range = c(2,5), guide = "none")
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20)
)
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45)
)
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45)
axis.ticks.x = element_line(colour = "red")
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45),
axis.ticks.x = element_line(colour = "red")
)
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45),
axis.ticks.x = element_line(colour = "red", size = 10)
)
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45),
axis.ticks.x = element_line(colour = "red", size = 10, length = 10)
)
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45),
axis.ticks.x = element_line(colour = "red", size = 5)
)
gdp.le.lm +
facet_wrap( ~ Continent) +
theme(
axis.text.x = element_text(size = 20, angle = 45),
axis.ticks.x = element_line(colour = "red", size = 2)
)
gdp.le.lm <- ggplot (data2015, aes(GDP, Life.Expectency)) +
geom_point(aes(colour = factor(Continent), size = Population), alpha = 0.7) +
scale_x_log10(labels = dollar_format(prefix = "$")) +
scale_size(range = c(2,15), guide = "none") +
guides(colour = guide_legend(override.aes = list(size=10))) +
geom_smooth(method = "lm", se = F) +
labs(x = "GDP", y = "Life Expectency", colour = "Continent") +
theme_minimal() +
theme(
text = element_text(size = 40)
) +
scale_color_brewer(palette = "Dark2")
gdp.le.lm
histo.seperate
p.base <- ggplot(penguins, aes(species, flipper_length_mm, colour = species)) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
labs (x = "Species", y = "Flipper Length (mm)", colour = "Species") +
scale_color_manual(values = three.palette.two)
library(palmerpenguins)
set.seed(2)
head(penguins[sample(nrow(penguins), 20), ], 20)
species <- ggplot() +
theme_minimal() +
theme(
text = element_text(size = 40)
) +
labs(x = "Species", y = "Count")
no.order <- species +
geom_bar(aes(penguins$species), fill = one.palette)
no.order
p.base <- ggplot(penguins, aes(species, flipper_length_mm, colour = species)) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
labs (x = "Species", y = "Flipper Length (mm)", colour = "Species") +
scale_color_manual(values = three.palette.two)
p.boxplot <- p.base +
geom_boxplot(aes(species, flipper_length_mm),
outlier.colour = one.palette, lwd = 1.5)
p.boxplot
p.base <- ggplot(penguins, aes(species, flipper_length_mm, colour = species)) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
labs (x = "Species", y = "Flipper Length (mm)", colour = "Species") +
scale_color_brewer(palette = "Dark2")
p.boxplot <- p.base +
geom_boxplot(aes(species, flipper_length_mm),
outlier.colour = one.palette, lwd = 3)
p.boxplot
p.base <- ggplot(penguins, aes(species, flipper_length_mm, colour = species)) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
labs (x = "Species", y = "Flipper Length (mm)", colour = "Species") +
scale_color_brewer(palette = "Dark2")
p.boxplot <- p.base +
geom_boxplot(aes(species, flipper_length_mm),
outlier.colour = one.palette, lwd = 1.5)
p.boxplot
p.base <- ggplot(penguins, aes(species, flipper_length_mm, colour = species)) +
theme_minimal() +
theme(
panel.grid.minor = element_blank(),
text = element_text(size = 40)
) +
labs (x = "Species", y = "Flipper Length (mm)", colour = "Species") +
scale_color_brewer(palette = "Dark2")
p.boxplot <- p.base +
geom_boxplot(aes(species, flipper_length_mm),
outlier.colour = one.palette, lwd = 1.5,
outlier.size = 5)
p.boxplot
p.violin <- p.base +
geom_violin(trim = F, lwd = 1.5) +
labs(y = "")
p.boxplot +
theme(
legend.position = "none"
)
p.violin
p.violin.box <- p.violin +
geom_boxplot(width = 0.1, lwd = 1.5) +
labs(y = "")
p.violin.box +
theme (
legend.position = "none"
)
p.violin
p.violin.box <- p.violin +
geom_boxplot(width = 0.1, lwd = 1.5, outlier.size = 3) +
labs(y = "")
p.violin.box +
theme (
legend.position = "none"
)
p.violin
p.violin.box <- p.violin +
geom_boxplot(width = 0.1, lwd = 1.5, outlier.size = 3, outlier.color = one.palette) +
labs(y = "")
p.violin.box +
theme (
legend.position = "none"
)
p.violin
p.violin.box <- p.violin +
geom_boxplot(width = 0.1, lwd = 1.5, outlier.size = 5, outlier.color = one.palette) +
labs(y = "")
p.violin.box +
theme (
legend.position = "none"
)
p.violin
p.violin.box <- p.violin +
geom_boxplot(width = 0.1, lwd = 1.5, outlier.size = 8, outlier.color = "black", outlier.alpha = 0.5) +
labs(y = "")
p.violin.box +
theme (
legend.position = "none"
)
p.violin
p.violin.box.stat <- p.violin.box +
stat_summary(fun = mean, geom = "point", size = 5, colour = "black") +
labs(y = "")
p.violin.box +
theme(
legend.position = "none"
)
p.violin.box.stat
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
pie.species <- penguins$species
pie.species <- as.data.frame(table(pie.species))
colnames(pie.species) <- c("Species", "Count")
total <- sum(pie.species$Count)
percent <- round(pie.species$Count/total, 2) * 100
pie.species <- cbind(pie.species, percent)
ypos <- cumsum(pie.species$percent) - 0.75*pie.species$percent
pie.species <- cbind(pie.species, ypos)
pie.chart <- ggplot(pie.species, aes(x = "", y = percent, fill = Species)) +
geom_bar(width = 1, stat = "identity", colour = "black") +
coord_polar("y", start=0) +
theme_void() +
theme(
text = element_text(size = 25),
legend.spacing = unit(3, "cm"),
legend.key.size = unit(1, "cm")
) +
scale_fill_brewer(palette = "Dark2")
pie.chart
pie.chart
order.col
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered), fill = three.palette.two)
order.col
order
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered)) +
scale_fill_brewer(palette = "Dark2")
order.col
order
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.ylim <- species +
geom_bar(aes(penguins$speciesordered), fill = one.palette) +
coord_cartesian(ylim = c(50,150))
order.ylim
order
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered, fill = speciesordered)) +
scale_fill_brewer(palette = "Dark2")
order.col
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered, fill = penguins$speciesordered)) +
scale_fill_brewer(palette = "Dark2")
order.col
order
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered, fill = penguins$speciesordered)) +
scale_fill_brewer(palette = "Dark2") +
theme(
legend.title = "Species"
)
order.col
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered, fill = penguins$speciesordered)) +
scale_fill_brewer(palette = "Dark2") +
theme(
legend.title = element_text("Species")
)
order.col
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
order.col <- species +
geom_bar(aes(penguins$speciesordered, fill = penguins$speciesordered)) +
scale_fill_brewer(palette = "Dark2") +
labs(fill = "Species")
order.col
order
order.col
pie.chart
order.col
penguins$speciesordered <- factor(penguins$species, levels = c("Chinstrap", "Gentoo", "Adelie"))
pie.species <- penguins$speciesordered
pie.species <- as.data.frame(table(pie.species))
colnames(pie.species) <- c("Species", "Count")
total <- sum(pie.species$Count)
percent <- round(pie.species$Count/total, 2) * 100
pie.species <- cbind(pie.species, percent)
ypos <- cumsum(pie.species$percent) - 0.75*pie.species$percent
pie.species <- cbind(pie.species, ypos)
pie.chart <- ggplot(pie.species, aes(x = "", y = percent, fill = Species)) +
geom_bar(width = 1, stat = "identity", colour = "black") +
coord_polar("y", start=0) +
theme_void() +
theme(
text = element_text(size = 25),
legend.spacing = unit(3, "cm"),
legend.key.size = unit(1, "cm")
) +
scale_fill_brewer(palette = "Dark2")
pie.chart
pie.chart
order.col
?diamonds
?diamonds
??diamonds
library(ggplot2)
?diamonds
knitr::opts_chunk$set(echo = FALSE,
message = FALSE,
warning = FALSE,
fig.height=10,
fig.width=19,
out.width = "80%")
knitr::read_chunk("scripts/nightingale.R")
cat(sort(rivers))
str(rivers)
?rivers
